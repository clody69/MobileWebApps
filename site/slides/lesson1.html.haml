:css
  @-webkit-keyframes chromelogo-zoom-spin {
    from { -webkit-transform: rotateX(0deg) scale(1); }
    to { -webkit-transform: rotateX(360deg) scale(0)  ; }
  }
  @-webkit-keyframes chromelogo-spin {
    from { -webkit-transform: rotate(0deg);}
    to { -webkit-transform: rotate(360deg); }
  }
  @-webkit-keyframes chromelogo-zoom {
    from { -webkit-transform: scale(1); }
    to { -webkit-transform: scale(0); }
  }

  @-webkit-keyframes chromelogo-move {
    from { -webkit-transform: translate(0px, 0px); }
    to { -webkit-transform: translate(700px,-400px); }
  }
  @-webkit-keyframes chromelogo-move-zoom {
    from { -webkit-transform: translate(0px, 0px) scale(1); }
    to { -webkit-transform: translate(700px,-400px) scale(0); }
  }   
  @-webkit-keyframes hide {
    from { opacity: 0;}
    to { opacity: 0; }
  }
  .chromelogo{
    -webkit-animation:  chromelogo-spin 1s infinite linear;
    //animation: chromelogo-spin 12s infinite cubic-bezier(0.9, 0.1, 0.1, 0.9);
  }
  .image_move_out {
    -webkit-animation:  chromelogo-move-zoom 5s cubic-bezier(0.07, 0.1, 0.25, 0.9), hide 0 5s infinite;  
  }
  .image_hide {
    -webkit-animation: hide 0s 6s;
    }
  
:javascript
  $(function() {
    $("#thewebisdead").bind('click', function(event) {
      $("#thewebisdead").addClass('chromelogo');
      $("#thewebisdead_wrapper").addClass('image_move_out');
      
      
    });
  });

=title_slide_tag("Lecture 1: Introduction")

%section.slide
  %header The Web is Dead!
  %article
    .row
      .twoColumn
        = image_tag "the-web-is-dead.jpg",  :caption => "Wired August 2010", :url => "http://www.wired.com/magazine/2010/08/ff_webrip/all/1", :resize => true
      .twoColumn.slide
        = image_tag "mobile-applications.jpg", :resize => true


%section.slide
  %header An App for Every Task
  %article
    .item
      = image_tag "iphone-facebook-2-application.jpg", :nowrap => true
      = image_tag "twitter-web-app.jpg", :nowrap => true
      = image_tag "weather-app.jpg", :nowrap => true

%section.slide
  %header More Time is Spent on Mobile Apps
  %article
    .row
      .twoColumn
        =image_tag "mobile-app-chart.jpg"
      .twoColumn
        =image_tag "mobile-app-chart-2.jpg"

%section.slide
  %header 
    The Apple Mobile App Economy
    %span.smaller
      %a(href="http://www.asymco.com/2012/02/19/app-developers-get-12-for-each-ios-device-sold/") Asymco

  %article
    %ul
      %li.slide
        How many total apps have been downloaded on iOS ? 
      %p.slide 25 billion
      %li.slide
        What's the gross sales from apps in Q4-11 ? 
      %p.slide $1 billion
      %li.slide
        How much was paid to developers in Q4-11 ? 
      %p.slide $700 million
      %li.slide
        On average how many apps were downloaded per unit sold ?
      %p.slide 75 apps
      %li.slide
        What's the minimum payout to developers per unit sold ? 
      %p.slide $12
    
%section.slide
  %header App Downloads on iTunes
  %article
    .row
      .twoColumn
        =image_tag "lesson1/itunes-apps-download-total.png"
      .twoColumn
        =image_tag "lesson1/itunes-apps-download-rate.png"

           
%section.slide
  %header Is the Web Dead ? 
  %article
    .row 
      .twoColumn
        %ul
          %li.slide
            If you are reading this, it's not.
          %li.slide 
            Wired article was read and discussed mostly on the web
          %li.slide
            HTML5 brings a lot of new cool stuff for web developers
          %li.slide
            Companies like Google, Apple, Adobe, Microsoft are embracing HTML5
          %li.slide
            Many apps are built in HTML5 and wrapped with a native shell
      .twoColumn
        #thewebisdead_wrapper
          .autoimage#thewebisdead
            = image_tag "the-web-is-dead.jpg",  :caption => "Wired August 2010", :url => "http://www.wired.com/magazine/2010/08/ff_webrip/all/1", :resize => true

%section.slide
  %header Evolution of the Web (Browsers)
  %article
    =image_tag "evolution-web.png", :caption => "Web Evolution", :url => "http://evolutionofweb.appspot.com/"


%section.slide
  %header Shifting from the "Document Web" to the "App Web"
  %article
    .row
      .twoColumn.slide
        .autobox
          %p 
            Hyperlinked documents
          %p
            Page reloading
          %p 
            Static pages
          %p 
            Web servers
          %p 
            Static content
      .twoColumn.slide
        .autobox
          %p 
            Interactive web apps
          %p
            Asynchronous API calls
          %p 
            HTML + CSS + JS
          %p 
            Data hubs (web apis)
          %p 
            Real-time communication
    .vmargin
      %p.slide
        Web apps are built with open standards that are refered as "Web Technologies"

%section.slide
  %header The Classic Web Architecture
  %article
    =image_tag "lesson1/web-arch-classic.png", :resize => true
  
%section.slide
  %header Towards a New Web Architecture  
  %article
    =image_tag "lesson1/web-arch-new.png", :resize => true

%section.slide
  %header Shom me a "Mobile Web App"
  %article
    =image_tag "lesson1/ft.png", :resize => true

%section.slide
  %header 
    FT Web App
    %span.smaller
      %a(href="http://blog.cohen-rose.org/2011/10/over-air-2011-ft-web-app-weve-got.html") (more info)

  %article
    %ul
      %li Developed in 8 months by 3 people
      %li Hugely optimized for iOS
      %li 
        Great and responsive UI design
        %ul
          %li Content balacncing based on device type
          %li Audio playing while moving to other pages
          %li Continous carousel
          %li Preloading of content
          %li Swipes using touch gestures
      %li Offline access
      %li More engagement than native app 

%section.slide
  %header LinkedIn App
  %article      
    =image_tag "lesson1/linkedin.png", :resize => true

%section.slide
  %header Developing Native Apps for Multiple Platforms
  %article 
    .row
      .twoColumn
        .slide
          =image_tag "asymco-live-death-mobile-platforms.png", :caption => "Asymco Feb 2011", :url => "http://www.asymco.com/2011/02/19/the-lives-and-deaths-of-mobile-platforms/"      
      .twoColumn
        .autobox        
          .slide 
            %p We must have:
          %ul
            %li.slide
              2008 - iPhone Apps
            %li.slide
              2009 - Android App
            %li.slide  
              2010 - iPad App
            %li.slide
              2011 - maintain them ???


%section.slide
  %header Develop, Test and Maintain
  %article
    =image_tag "smartphones.jpg", :resize => true


%section.slide
  %header Fragmentation of OS Versions
  %article
    =image_tag "lesson1/mobile-platform-updates.png", :resize => true, :url => "http://theunderstatement.com/post/11982112928/android-orphans-visualizing-a-sad-history-of-support"
    
%section.slide
  %header 
    Smartphone Platforms Shares 
    .smaller.inline
      (units shipped Q4 2011)
  %article
    .row
      .twoColumn
        =image_tag "smartphone-platforms-share.png", :resize => true
      .twoColumn.slide
        =image_tag "smartphone-languages-share.png", :resize => true

%section.slide
  %header 
    Smartphone Browsers Shares
    .smaller.inline
      (units shipped Q4 2011)
  %article
    .row
      .twoColumn
        =image_tag "smartphone-browser-share.png", :resize => true
      .twoColumn.slide
        =image_tag "smartphone-html5-share.png", :resize => true
%section.slide
  %header What is HTML5 ? 
  %article
    %p 
      %strong 1998
      \- W3C decided they will stop evolving HTML beyond version 4.01 
    %p  
      %strong 2000
      \- W3C released XHTML 1.0 and force the world to use XML
    %p   
      %strong 2002
      \- W3C released first draft of XHTML 2.0, no backwards compatibility
    %p  
      %strong 2004
      \- WHATWG started working on HTML v5 (Opera, Mozilla and Apple)
    %p  
      %strong 2006
      \- W3C agrees to use WHATWG proposal for HTML5
    %p 
      %strong 2009
      \- W3C stops works on XHTML 2.0 and resources are diverted to HTML5

%section.slide
  %header Philposphy of HTML5
  %article
    %p 
      Philosophy of HTML5
      %ul
        %li Specify undocumented features (e.g. XMLHttpRequest)
        %li Browser behaviour with invalid markup
        %li Support web applications
        %li Define an open standard (opposed to Flash)
        %li Don't break the Web
    %p 
      %a(href="http://www.whatwg.org/specs/web-apps/current-work/multipage/") HTML5 Spec at WHATWG
    %p
      %a(href="http://www.w3.org/standards/webdesign/") Some additional sepcs at W3C
       
     
      
%section.slide
  %header HTML5     
  %article
    .row
      .twoColumn
        .item
          %img(src = "imgs/html5/HTML5_Semantics_64.png")
          %span 
            %strong New semantics
        .item
          %img(src = "imgs/html5/HTML5_Styling_64.png")
          %span
            %strong CSS3
        .item
          %img(src = "imgs/html5/HTML5_3D_Effects_64.png")
          %span
            %strong 3D, Graphics and Effects
        .item
          %img(src = "imgs/html5/HTML5_Offline_Storage_64.png")
          %span
            %strong Offline & Storage
      .twoColumn
        .item
          %img(src = "imgs/html5/HTML5_Connectivity_64.png")
          %span
            %strong Connectivity
        .item
          %img(src = "imgs/html5/HTML5_Device_Access_64.png")
          %span
            %strong Device Access
        .item
          %img(src = "imgs/html5/HTML5_Multimedia_64.png")
          %span
            %strong Multimedia
        .item
          %img(src = "imgs/html5/HTML5_Performance_64.png")
          %span
            %strong Performance & Integration

%section.slide
  %header
    =html5_semantics_tag()
  %article
    .autobox
      %strong New Semantics
      %p section, header, footer, nav, ...
      %strong New Form Controls & Types
      %p date, range, email, url, tel, ...
      %strong New Form Validation
      %p by type, required, :valid, :invalid, :required

%section.slide
  %header
    =html5_offline_storage_tag()
  %article
    .autobox
      %strong Offline Usage
      %ul
        %li Install a package on the device
        %li Buggy on some platforms
        %li online/offline events
        %li iOS full screen metatag
      %strong Storage
      %ul
        %li Persistent and Session Storage
        %li key/value (strings)
        %li limited to 5Mb
        %li IndexDB and SQL storage

%section.slide
  %header
    =html5_multimedia_tag()
  %article
    .autobox
      %p Audio and Video Tags
      %p Javascript API & events
      %p Some codecs supported

%section.slide
  %header
    =html5_3d_effects_tag()
  %article
    .autobox
      %p 2D Canvas API
      %P SVG support
      %p WebGL

%section.slide
  %header
    =html5_device_access_tag()
  %article
    .autobox
      %p Accelerometer / gyroscope / magnetometer
      %p Orientation change
      %p Touch events (touchstart, touchmove, touchend)
      %p File API and File Reader
      %p (Media Camera API)
      

%section.slide
  %header
    =html5_styling_tag()
  %article
    .autobox
      %strong New styling
      %p Rounded borders, shadows, opacity
      %strong 2D & 3D transforms
      %p rotate, scale, skew, translate
      %strong Transitions
      %p basic animations between 2 states
      %p 
        %strong keyframe animations
      %p prefixes (-webkit, -o, -moz, -ms)
      
%section.slide
  %header
    =html5_websockets_tag()
  %article
    .autobox
      %p Web Sockets
      %p Server-sent Events

%section.slide
  %header
    =html5_performance_tag()
  %article
    .autobox
      %p Notifications API
      %p XMLHttpRequest 2
      %p Web Workers
      
%section.slide
  %header Browser Support for HTML5
  %article
    =image_tag "caniuse.png", :caption => "When Can I Use ...", :url => "http://caniuse.com/"
 
%section.slide
  %header Test your Browser for HTML5 support
  %article
    =image_tag "html5test.png", :caption => "The HTML5 Test", :url => "http://html5test.com/", :resize => true

%section.slide
  %header Mobile Browsers
  %article
    .autobox
      %p.slide Too many
      %p.slide Some are limited
      %p.slide Some are too innovative
      %p.slide Some are proxy based
      %p.slide Most have little documentation
      %p.slide Most have little debugging support
      %p.slide Focus, cursor, touch or multi-touch based
%section.slide
  %header Mobile HTML5 Compatibility Table
  %article
    =image_tag "mobile-html5-comp-table.png", :caption => "Mobile HTML5", :url => "http://mobilehtml5.org", :resize => true
%section.slide
  %header Mobile Web Challenges
  %article
    .autobox
    %p.slide Server-side detection
    %p.slide Responsive design
    %p.slide Mobile usability
    %p.slide Best experience based on context
    %p.slide Performance optimization
    %p.slide The viewport and pixel density
    %p.slide Data URI - inlining content
%section.slide
  %header HTML5 Frameworks & Tools
  %article.larger.centered
    .item.emphasizebox 
      %span
        UI
      =image_tag "jquery.png", :nowrap => true, :url => "http://jquerymobile.com/"
      =image_tag "sencha.png", :nowrap => true, :url => "http://www.sencha.com/"
      =image_tag "jqtouch.png", :nowrap => true, :url => "http://jqtouch.com/"
      =image_tag "sproutcore.png", :nowrap => true, :url => "http://sproutcore.com/"
    .item.emphasizebox 
      %span
        Helpers
      =image_tag "backbonejs.png", :nowrap => true, :url => "http://documentcloud.github.com/backbone/"
      =image_tag "modernizr.png", :nowrap => true, :url => "http://www.modernizr.com/"
      =image_tag "handlebarsjs.png", :nowrap => true, :url => "http://www.handlebarsjs.com/"
    .item.emphasizebox 
      %span
        Dev Tools 
      =image_tag "coffescript.png", :nowrap => true, :url => "http://coffeescript.org/"  
      =image_tag "sass.png", :nowrap => true, :url => "http://sass-lang.com/"
      =image_tag "haml.png", :nowrap => true, :url => "http://haml-lang.com/"
    .item.emphasizebox 
      %span
        Backend
      =image_tag "rails.png", :nowrap => true, :url => "http://rubyonrails.org"
      =image_tag "sinatra.png", :nowrap => true, :url => "http://www.sinatrarb.com"
      =image_tag "nodejs.png", :nowrap => true, :url => "http://nodejs.org"
      =image_tag "django.png", :nowrap => true, :url => "https://www.djangoproject.com/"
    .item.emphasizebox 
      %span
        Database
      =image_tag "mongodb.png", :nowrap => true, :url => "http://www.mongodb.org/"
      =image_tag "couchdb.png", :nowrap => true, :url => "http://couchdb.apache.org/"

%section.slide
  %header jQuery Mobile Example
  %article.small
    .code_block
      :coderay_raw
        #!html
        <!DOCTYPE html> 
        <html> 
          <head> 
          <title>Hello World</title> 
          <meta name="viewport" content="width=device-width, initial-scale=1"> 
          <link rel="stylesheet" href="http://code.jquery.com/mobile/1.0/jquery.mobile-1.0.min.css" />
          <script type="text/javascript" src="http://code.jquery.com/jquery-1.6.4.min.js"></script>
          <script type="text/javascript" src="http://code.jquery.com/mobile/1.0/jquery.mobile-1.0.min.js"></script>
        </head> 
        <body> 
          <div data-role="page">
            <div data-role="header">
              <h1>List of cars</h1>
            </div><!-- /header -->
            <ul data-role="listview" data-inset="true" data-filter="true">
              <li><a href="#">Acura</a></li>
              <li><a href="#">Audi</a></li>
              <li><a href="#">BMW</a></li>
              <li><a href="#">Cadillac</a></li>
              <li><a href="#">Ferrari</a></li>
            </ul>
          </div><!-- /page -->
        </body>
        </html>

%section.slide
  %header jQuerySimple on a iPhone and iPad
  %article
    .row
      .twoColumn
        =image_tag "jQuerySimple-iphone.png", :resize => true
      .twoColumn
        =image_tag "jQuerySimple-ipad.png", :resize => true
    

%section.slide
  %header Sencha Example
  %article.smaller
    .code_block
      :coderay_raw
        #!html
        <!DOCTYPE html> 
        <html> 
            <head> 
                <meta http-equiv="Content-Type" content="text/html; charset=utf-8"> 
                <title>Hello World</title> 
                <script src="sencha-touch.js" type="text/javascript"></script> 
                <link href="sencha-touch.css" rel="stylesheet" type="text/css" /> 
                 <script type="text/javascript"> 
                    new Ext.Application({
                        launch: function() {
                            var cars = new Ext.data.Store({
                                model: Ext.regModel('', {fields: ['name', 'link']}),
                                data: [
                                    {name: 'Acura', link:'na'},
                                    {name: 'Audi', link:'sa'},
                                    {name: 'BMW', link:'eu'},
                                    {name: 'Cadillac', link:'eu'},
                                    {name: 'Ferrari', link:'eu'}
                                ]
                            });
                            new Ext.Panel({
                                fullscreen: true,
                                dockedItems: [{ xtype: 'toolbar', title: 'List of cars', }],
                                items: [{ xtype: 'list', store: cars, itemTpl: '{name}' }]
                            });
                        }
                    }); 
                </script> 
            </head> 
            <body></body> 
        </html>

%section.slide
  %header senchaSimple on a iPhone and iPad
  %article
    .row
      .twoColumn
        =image_tag "senchaSimple-iphone.png", :resize => true
      .twoColumn
        =image_tag "senchaSimple-ipad.png", :resize => true

%section.slide
  %header Hey dude, native is better! 
  %article
    %ul
      %li
        .slide Is HTML5 a silver bullet ? 
        .slide No, but silver bullets don't exist.
      %li 
        .slide HTML5 performance is not goot enough ? 
        .slide Sometimes, it is not enough.
      %li
        .slide HTML5 is more efficient to develop ? 
        .slide Yes, sometimes. Look at FT case.
      %li
        .slide HTML5 lacks good tools
        .slide Changing fast (check Sencha)
      %li
        .slide HTML5 doesn't have an appstore
        .slide Hybrid apps
      %li
        .slide Can HTML5 help in development cost saving ? 
        .slide Possibly
        
        

%section.slide
  %header Organization of the course
  %article
    %p
      %strong.red
        Lectures
      \: Introduction of key concepts, technologies and frameworks
    %p
      %strong.red
        Labs
      \: Hands-on classes with practical exercices on selected topics
    %p
      %strong.red
        Assignment
      \: Team work development of a mobile web app
    
%section.slide
  %header Lectures & Labs
  %article
    .row
      .twoColumn
        .autobox
          %p Lecture 1: Introduction
          %p Lecture 2: Building a Mobile Web App
          %p Lecture 3: Templating and MVC
          %p Lecture 4: File and Device Access
          %p Lecture 5: CSS3 & Canvas
          %p Lecture 6: Websockets & Webworkers
          %p Lecture 7: Developing native apps
      .twoColumn
        .autobox
          %p Lab 1: Assignment Kick-off
          %p Lab 2: jQuery Mobile
          %p Lab 3: Backbone.js
          %p Lab 4: Device Access
          %p Lab 5: Ruby on Rails 3
          %p Lab 6: Designing REST interfaces
          %p Lab 7: PhoneGap

%section.slide
  %header
    Course Material and Communication
  %article
    %p 
      Slides are available at 
      %a(href="http://aaltowebapps.com") aaltowebapps.com
    %p The slides are best viewed with Google Chrome 
    %p 
      Exercises are available at
      %a(href="https://github.com/aaltowebapps/MobileWebAppsExamples") GitHub
    %p 
      Communication channels:
      %ul
        %li
          Twitter: 
          %a(href="https://twitter.com/#!/aaltowebapps") @aaltowebapps 
        %li
          Noppa

%section.slide
  %header The Staff
  %article
    %p
      %strong
        Claudio Riva
      , Nokia, Main Instructor
    %p
      %strong
        Antti Vuorela
      , Futurice, Course Assistant
    %p 
      %strong
        Kimmo Karhu
      , Aalto University, Assignment Coordinator
    %p
      %strong 
        Häkan Mitts
      , Aalto University, Program Coordinator
    %p
      %strong Mikael Blomberg
      , SC5, jQuery and Backbone Instructor
    %p
      %strong 
        Matias Korhonen
      , Kisko Labs, Ruby On Rails Instructor
    %p
      %strong
        Lauri Jutila
      , Kisko Labs, Ruby on Rails Instructor
  
.background(data-background = "bg-stones")
        
%section.slide.section-title
  %h1 The Fundamentals
  .agenda
    %p Git 
    %p Javascript & Json
    %p jQuery
    %p Ruby & Sinatra
    %p HAML
    %p Tools
    
%section.slide
  %header Git
  %article
    .row.singlespace.small
      .threeColumn
        .autobox
          %p Start using git
          %pre
            cd yourproject
            git init
          %pre
            git clone git@github.com...
          %p Add all files in a directory
          %pre
            git add .
          %p Check status
          %pre
            git status -s
          %p Commit 
          %pre
            git commit -m "First commit"
            git commit -am "First commit"
      .threeColumn
        .autobox
          %p Show all branches
          %pre
            git branch
            git branch -a
          %p Create a new branch
          %pre
            git branch newfeature
          %p Switch branch
          %pre
            git checkout newfeature
          %p Add a remote
          %pre
            git remote add <name> <url>
          %p View the remotes
          %pre  
            git remote -v 
      .threeColumn
        .autobox
          %p Link a local to a remote branch
          %pre  
            got branch --track local remote
          %p Fetch changes from remotes
          %pre  
            git fetch <remote> <branch>
          %p Push changes to remotes
          %pre  
            git push <remote> <branch>
          %p Review changes between different branches
          %pre  
            git log origin/master ^master
          %p Merge changes 
          %pre  
            git checkout master
            git merge origin/master
    .autobox.important.centered
      %strong.red
        Must Read: 
      %a(href="http://gitref.org") Git Reference        

%section.slide
  %header
    Javascript Event Loop
  %article
    =image_tag("/lesson6/event-loop-js.png", :resize => true)

%section.slide
  %header Javascript: Asynchronous calls
  %article
    %p Javascript has one thread of execution
    %p Blocking operations (e.g. network) must use callbacks
    .larger
      :coderay
        #!javascript
        var jqxhr = $.getJSON("example.json", function() {
          alert("success");
        });
    %br
    .larger 
      :coderay
        #!javascript
        $('#target').click(function() {
          alert('Handler for .click() called.');
        });

%section.slide
  %header Javascript: Lambda Functions
  %article
    %p Lambda functions are created at runtime when the execution reaches that point of the flow. This allows functions to be defined conditionally
    .row.vmargin
      .twoColumn
        .autobox
          Function Declaration
          :coderay
            #!javascript
            ...
            function square(x) {
              return x * x;
            }
            var b = square(2); //b gets assigned 4
            ...
      .twoColumn
        .autobox
          Function Statement
          :coderay
            #!javascript
            ...
            var square = function(x) {
              return x * x;
            };
            var b = square(2); //b gets assigned 4
            ...
    %p Lambda functions are normal objects and can be passed as function parameters (e.g. callbacks)
    :coderay
      #!javascript
      $('#target').click( square );

      
%section.slide
  %header 
    Javascript: Iterators (jQuery)
  %article
    .row 
      .twoColumn
        %strong.red
          $.each
        \: iterates over a list
      .twoColumn
        or a map
    .row
      .twoColumn
        :coderay
          #!javascript
          var list = [1,2,3,4,5];
          var a = $.each(list, function(index, value) {
            alert(index + ": " + value);
          }); //It produces 5 alerts
      .twoColumn
        :coderay
          #!javascript
          var map = {'a': 'b', 'c': 'd'};
          var a = $.each(list, function(key, value) {
            alert(key + ": " + value);
          }); //It produces 2 alerts
    
    .vmargin
      %strong.red
        $.map
      \: applies a function to each element of the array and maps the results into a new array
      :coderay
        #!javascript
        var list = [1,2,3,4,5];
        var a = $.map(list, function(value, index) {
          return square(value);
        }; // a gets [1,4,9,16,25]

%section.slide
  %header 
    Javascript: Iterators (underscore.js) 
  %article
    .row 
      .twoColumn
        .autobox.hmargin
          %strong.red
            each
          \: _.each (list, iterator, [context]) 
          :coderay
            #!javascript
            _.each([1, 2, 3], function(n){ alert(n); });
            _.each({one : 1, two : 2, three : 3}, function(n, k){ alert(n); });
          .vmargin
            %strong.red
              map
            \: _.map(list, iterator, [context]) 
            :coderay
              #!javascript
              _.map({one : 1, two : 2, three : 3}, function(n, k){ return n*3; });
              => [3, 6, 9]    
          .vmargin
            %strong.red
              reduce
            \: _.reduce(list, iter, memo, [context])    
            :coderay
              #!javascript
              var sum = _.reduce([1, 2, 3], function(memo, n){ return memo + n; }, 0);
              => 6
      .twoColumn
        .autobox
          %strong.red
            find
          \: _.find(list, iterator, [context]) 
          :coderay
            #!javascript
            _.find([1, 2, 3, 4, 5, 6], function(n){ return n % 2 == 0; });
            => 2
          .vmargin
            %strong.red
              filter
            \: _.filter(list, iterator, [context])
            :coderay
              #!javascript
              _.filter([1, 2, 3, 4, 5, 6], function(n){ return n % 2 == 0; });
              => [2, 4, 6]
          .vmargin
            %strong.red
              groupBy
            \: _.groupBy(list, iterator) 
            :coderay
              #!javascript
              _.groupBy(['one', 'two', 'three'], 'length');
              => {3: ["one", "two"], 5: ["three"]}
    
%section.slide
  %header Javascript: Closure
  %article
    %p
      A closure is formed by returning a function object that was created within an execution 
      context of a function call from that function call and assigning a reference to that inner 
      function to a property of another object. Or by directly assigning a reference to such 
      a function object to, for example, a global variable, a property of a globally accessible 
      object or an object passed by reference as an argument to the outer function call (
      %a(href="http://jibbering.com/faq/notes/closures") Closures
      ).
    :coderay
      #!javascript
      function closureBuilder(arg1, arg2){  //outer function (builder)
          var localVar = 8;
          function exampleReturned(innerArg){  //inner function 
              return ((arg1 + arg2)/(innerArg + localVar));
          }
          return exampleReturned;  //return a reference to the inner fucntion
      }
      var globalVar = closureBuilder(2, 4);
      var secondGlobalVar = exampleClosureForm(12, 3);

      globalVar(2);   //Result ?
      secondGlobalVar(5);   // Result ? 
      
%section.slide
  %header Javascript: Closure Example with Google Maps
  %article
    :coderay
      #!javascript  
      var infoWindow = new google.maps.InfoWindow();
  
      function addInfoWindow(marker, id, name) {
        google.maps.event.addListener(marker, 'click', function () {
            infoWindow.close();
            infoWindow.setContent('<p>'+ name + '</p>');
            infoWindow.open(map, marker);
          });
      }
      
      function addMarkers(json) {
        var markers = [];
        for (i=0; i<json.length; i++) {
            var place = json[i];
  
            var point = new google.maps.LatLng(place.coordinates[0], place.coordinates[1]);      
            var marker = new google.maps.Marker({position:point, title:place.name});
            
            addInfoWindow(marker, place.slug, place.name);
            ...

%section.slide
  %header Javascript Object Notation (JSON)
  %article
    %p Lightweight data-interchange format
    %p Human readable and easy to comprehend
    %p Easy for machines to parse
    .row
      .twoColumn
        .autobox
          %strong.red
            Array
          :coderay
            #!javascript
              ["first", "second", 3, 4]
      .twoColumn
        .autobox
          %strong.red
            Hash table
          :coderay
            #!javascript
            {"name":"John", "address":"London", "age":38}    
    .row.vmargin
      .autobox
        Serialize/Deserialize
        :coderay
          #!javascript
          JSON.stringify( ['first', 'second', 3, 4] );
          => ["first","second",3,4]
        
          JSON.parse( ' ["first", "second", 3, 4] ' );
          => Object
        
%section.slide
  %header 
    jQuery
    %span.smaller
      %a(href="http://jquery.com") more info  
  %article
    %p 
      Fast Javascript library for 
      %strong document traversing
      , 
      %strong event handling
      , 
      %strong animations
      and 
      %strong Ajax interactions 

    .row
      .twoColumn
        .autobox
          HTML
          :coderay
            #!javascript
            ...
            <body>
              <div id="button">Click me</div>
            </body
      .twoColumn
        .autobox
          JS
          :coderay
            #!javascript
              $(document).ready(function(){
                $("#button").click( function(event) {
                  alert("Button pressed");
                  $("#button").toggleClass("red");
                  $("#button").fadeOut().fadeIn();
                });
              });  

    .autobox
      Test here: 
      %span(id = "button") Click me

:javascript
  $(document).ready(function(){
    $("#button").click( function(event) {
      alert("Button pressed");
      $("#button").toggleClass("red");
      $("#button").fadeOut().fadeIn();
    });
  });  
    

%section.slide
  %header Ruby
  %article 
    %p Ruby is a dynamic programming language that combines functional and imperative programming ( a mix of Perl, Smalltalk, Eifel, Ada and Lisp)
    %p 
      Online resources to start with:
      %ul
        %li 
          %a(href="http://www.ruby-lang.org/en/documentation/quickstart/") Ruby in Twenty Minutes
        %li 
          %a(href="http://ruby.on-page.net/") Ruby on One Page
        %li
          %a(href="http://ruby-doc.org/core-1.9.3/Enumerable.html") Enumerables
        %li
          %a(href="http://ruby-doc.org/docs/ProgrammingRuby/") Programming Ruby
      
%section.slide
  %header Ruby Blocks
  %article
    .row
      .twoColumn
        .autobox
          :coderay
            #!ruby
            3.times { puts 'Hello' }
            Hello
            Hello
            Hello
            => 3
          .vmargin
            :coderay
              #!ruby
              array = [1, 2, 3, 4]
              array.collect do |n|
                n ** 2
              end         
              => [1, 4, 9, 16]
          .vmargin
            :coderay
              #!ruby
              @names = %w(John Anne Lukas)
              @names.each do |name|
                puts "Hello \#{name}!"
              end
              Hello John!
              Hello Anne!
              Hello Lukas!
              => ["John", "Anne", "Lukas"]    
      .twoColumn
        .autobox
          :coderay
            #!ruby
            #iterator for Fibonacci numbers
            def fibUpTo(max)
                n1, n2 = 1, 1
                while n1 <= max
                    yield n1  # invoke block with value
                    n1, n2 = n2, n1+n2  # and calculate next
                end
            end

            fibUpTo(1000) { |term| print term, " " }
            =>
            1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987            

            a = []  
            fibUpTo(1000) { |term| a << term }
            a
            => [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987]         
               
%section.slide
  %header 
    Sinatra
    %span.smaller
      %a(href="http://www.sinatrarb.com/intro.html") more info
  %article
    .autobox
      %p Sinatra is a DSL for quickly creating web applications in Ruby
      %p Single file web app
      %p Runs on Rack (fast Ruby web server)
      %p Supports many template engines
    .autobox
      :coderay
        #!ruby
        require 'sinatra'

        get '/hi' do
          "Hello World!"
        end

%section.slide
  %header Sinatra - HTTP Methods (REST)
  %article
    :coderay
      #!ruby
      get '/' do
        .. show something ..
      end

      post '/' do
        .. create something ..
      end

      put '/' do
        .. replace something ..
      end

      delete '/' do
        .. annihilate something ..
      end

%section.slide
  %header Sinatra - Routes
  %article
    .autobox
      Simple Routes
      :coderay
        #!ruby
        get '/hello' do
          'Hello World'
        end
    .autobox.vmargin
      Named parameters
      :coderay
        #!ruby
        get '/hello/:name' do
          # matches "GET /hello/foo" and "GET /hello/bar"
          # params[:name] is 'foo' or 'bar'
          "Hello \#{params[:name]}!"
        end            

%section.slide
  %header Sinatra - Views
  %article
    .autobox
      :coderay
        #!ruby
        # erb => renders /views/index.erb (using /views/layout.erb if it exists)
        get '/' do 
          erb :index
        end
    .autobox.vmargin
      :coderay
        #!ruby
        #haml => renders /views/index.haml embedded in the views/post.haml
        get '/' do 
          haml :index, :layout => :post
        end
    .autobox.vmargin
      :coderay
        #!ruby
        #Inline templates
        get '/' do
          haml '%div.title Hello World'
        end
        
%section.slide
  %header 
    HAML
    %span.smaller(href="http://haml-lang.com/") more info
  %article
    %p 
      Template Language
      %ul
        %Li Mix Ruby code with HAML
        %li Haml generates HTML code
    %p 
      Clarity
      %ul
        %li Indentation = structure
        %li 
          Tags begin with 
          %strong %
        %li Tags close themselves
        %li Use of hashes for attributes
%section.slide
  %header
    HAML - Syntax
  %article
    .row
      .twoColumn
        :coderay
          #!haml
          %tag content
      .twoColumn
        :coderay
          #!html
          <tag>content</tag>
    .row.vmargin
      .twoColumn
        :coderay
          #!haml
          %h1 Hello HAML
          %p HAML is 
          %ul
            %li Beautiful
            %li Easy
            %li Well-indented
      .twoColumn
        :coderay
          #!html
          <h1>Hello HAML</h1>
          <p>HAML is</p>
          <ul>
            <li>Beautiful</li>
            <li>Easy</li>
            <li>Well-indented</li>
          </ul>
%section.slide
  %header
    HAML - Attributes
  %article
    .row
      .twoColumn
        :coderay
          #!haml
          %a{href => "http://bbc.com", id => "title"} 
            BBC
      .twoColumn
        :coderay
          #!html
          <a href="http://bbc.com" id="title">BBC</a>
    .row.vmargin
      .twoColumn
        :coderay
          #!haml
          %a(href="http://haml-lang.com" id="title") 
            BBC
      .twoColumn
        :coderay
          #!html
          <a href="http://bbc.com" id="title">BBC</a>

%section.slide
  %header
    HAML - Shortcuts
  %article
  .row
    .twoColumn
      :coderay
        #!haml
        %p{class => "bio"} Hello
        %p.bio Hello
    .twoColumn
      :coderay
        #!html
        <p class = "bio">Hello</p>
  .row.vmargin
    .twoColumn
      :coderay
        #!haml
        %p{id=> "title"} Hello
        %p#title Hello
    .twoColumn
      :coderay
        #!html
        <p id = "title">Hello</p>
  .row.vmargin
    .twoColumn
      :coderay
        #!haml
        #title
          .red
            %p Hello 
    .twoColumn
      :coderay
        #!html
        <div id = title>
          <div class = red>
            <p>Hello</p>
          </div>
        </div>
%section.slide
  %header HAML - Ruby Evaluation
  %article.large
    :coderay
      #!haml
      %h1 My Blog
      - for article in @articles
        .post
          .title
            %h1= article.title
          .date
            =article.date.strftime("%d %m %Y")
          .article
            %p= article.body
        
%section.slide
  %header Tools
  %article.small.singlespace
    %p
      Browsers on PC with debugging capability:
      %ul
        %li Google Chrome 
        %li Firefox + Firebug
        %li 
          Safari (
          %a(href="http://www.iwebinspector.com/") iWebInspector
          )
    %p
      Mobile Browser Emulators (
      %a(href="http://www.mobilexweb.com/emulators") guide
      ):
      %ul
        %li iOS Browser: XCode contains iPhone/iPad emulators
        %li Android SDK
        %li 
          %a(href="http://www.opera.com/developer/tools/") Opera Mobile Emulator + Dragonfly
    %p 
      Devices:
      %ul
        %li iPhone/iPad: iOS browser
        %li Android: native browser, Firefox 11, Chrome for Andorid, Opera Mobile
        %li Nokia N9: native browser, Firefox 10, Opera Mobile
    %p 
      %a(href="http://adobe.com/go/shadow") Adobe Shadow
